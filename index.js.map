{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/components/utils/escapeRegExp.ts","webpack:///./src/components/CurrencyInput.tsx","webpack:///./src/components/utils/index.ts","webpack:///./src/components/utils/formatValue.ts","webpack:///./src/example.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/examples/Example1.tsx","webpack:///./src/components/utils/cleanValue.ts","webpack:///./src/components/utils/parseAbbrValue.ts","webpack:///./src/components/utils/removeSeparators.ts","webpack:///./src/components/utils/removeInvalidChars.ts","webpack:///./src/components/utils/fixedDecimalValue.ts","webpack:///./src/components/utils/addSeparators.ts","webpack:///./src/components/utils/isNumber.ts","webpack:///./src/components/utils/padTrimValue.ts","webpack:///./src/examples/Example2.tsx","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/react-hot-loader/index.js","webpack:///./node_modules/react-hot-loader/dist/react-hot-loader.production.min.js","webpack:///./src/examples/Example3.tsx","webpack:///./src/index.ts","webpack:///./src/examples/FormatValuesExample.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","escapeRegExp","stringToGoIntoTheRegex","replace","CurrencyInput","allowDecimals","allowNegativeValue","id","className","decimalsLimit","defaultValue","disabled","userMaxLength","userValue","onChange","onBlurValue","fixedDecimalLength","placeholder","precision","prefix","step","decimalSeparator","groupSeparator","turnOffSeparators","turnOffAbbreviations","props","Error","isNumber","formatValueOptions","cleanValueOptions","_defaultValue","undefined","formatValue","String","useState","stateValue","setStateValue","cursor","setCursor","inputRef","useRef","processChange","selectionStart","valueOnly","cleanValue","length","formattedValue","useEffect","current","setSelectionRange","formattedPropsValue","type","inputMode","target","onBlur","fixedDecimals","fixedDecimalValue","newValue","padTrimValue","onFocus","onKeyDown","currentValue","Number","ref","_value","isNegative","RegExp","test","hasDecimalSeparator","includes","split","int","decimals","addSeparators","render","document","getElementById","ReactDOM","Example1","errorMessage","setErrorMessage","setClassName","setValue","rawValue","setRawValue","rawBlurValue","setRawBlurValue","href","htmlFor","isNaN","abbreviations","exec","prefixWithValue","preValue","withoutPrefix","concat","withoutSeparators","removeSeparators","withoutInvalidChars","removeInvalidChars","some","letter","toLowerCase","parsed","parseAbbrValue","includeNegative","trimmedDecimals","slice","abbrValue","_decimalPlaces","valueLength","Math","pow","round","abbrMap","k","b","reg","match","digits","abbr","multiplier","separator","validChars","chars","join","input","Example2","hot","webpackPolyfill","deprecate","paths","children","e","default","AppContainer","warnAboutHMRDisabled","console","error","Children","only","shouldWrapWithAppContainer","createElement","areComponentsEqual","setConfig","cold","configureComponent","reducer","state","fieldName","initialState","field1","validationClass","field2","Example3","useReducer","dispatch","handleOnChange","total","setPrefix","setGroupSeparator","setDecimalSeparator","setTurnOffSeparators","handleTurnOffSeparatorChange","newDecimalSeparator","checked"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = React;","/**\n * Escape regex char\n *\n * See: https://stackoverflow.com/questions/17885855/use-dynamic-variable-string-as-regex-pattern-in-javascript\n */\nexport const escapeRegExp = (stringToGoIntoTheRegex: string): string => {\n  return stringToGoIntoTheRegex.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport { CurrencyInputProps } from './CurrencyInputProps';\nimport {\n  isNumber,\n  cleanValue,\n  fixedDecimalValue,\n  formatValue,\n  padTrimValue,\n  CleanValueOptions,\n} from './utils';\n\nexport const CurrencyInput: FC<CurrencyInputProps> = ({\n  allowDecimals = true,\n  allowNegativeValue = true,\n  id,\n  name,\n  className,\n  decimalsLimit,\n  defaultValue,\n  disabled = false,\n  maxLength: userMaxLength,\n  value: userValue,\n  onChange,\n  onBlurValue,\n  fixedDecimalLength,\n  placeholder,\n  precision,\n  prefix,\n  step,\n  decimalSeparator = '.',\n  groupSeparator = ',',\n  turnOffSeparators = false,\n  turnOffAbbreviations = false,\n  ...props\n}: CurrencyInputProps) => {\n  if (decimalSeparator === groupSeparator) {\n    throw new Error('decimalSeparator cannot be the same as groupSeparator');\n  }\n\n  if (isNumber(decimalSeparator)) {\n    throw new Error('decimalSeparator cannot be a number');\n  }\n\n  if (isNumber(groupSeparator)) {\n    throw new Error('groupSeparator cannot be a number');\n  }\n\n  const formatValueOptions = {\n    decimalSeparator,\n    groupSeparator,\n    turnOffSeparators,\n    prefix,\n  };\n\n  const cleanValueOptions: Partial<CleanValueOptions> = {\n    decimalSeparator,\n    groupSeparator,\n    allowDecimals,\n    decimalsLimit: decimalsLimit || fixedDecimalLength || 2,\n    allowNegativeValue,\n    turnOffAbbreviations,\n    prefix,\n  };\n\n  const _defaultValue =\n    defaultValue !== undefined\n      ? formatValue({ value: String(defaultValue), ...formatValueOptions })\n      : '';\n  const [stateValue, setStateValue] = useState(_defaultValue);\n  const [cursor, setCursor] = useState(0);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const onFocus = (): number => (stateValue ? stateValue.length : 0);\n\n  const processChange = (value: string, selectionStart?: number | null): void => {\n    const valueOnly = cleanValue({ value, ...cleanValueOptions });\n\n    if (!valueOnly) {\n      onChange && onChange(undefined, name);\n      setStateValue('');\n      return;\n    }\n\n    if (userMaxLength && valueOnly.replace(/-/g, '').length > userMaxLength) {\n      return;\n    }\n\n    if (valueOnly === '-') {\n      onChange && onChange(undefined, name);\n      setStateValue(value);\n      return;\n    }\n\n    const formattedValue = formatValue({ value: valueOnly, ...formatValueOptions });\n\n    /* istanbul ignore next */\n    if (selectionStart !== undefined && selectionStart !== null) {\n      const cursor = selectionStart + (formattedValue.length - value.length) || 1;\n      setCursor(cursor);\n    }\n\n    setStateValue(formattedValue);\n\n    onChange && onChange(valueOnly, name);\n  };\n\n  const handleOnChange = ({\n    target: { value, selectionStart },\n  }: React.ChangeEvent<HTMLInputElement>): void => {\n    processChange(value, selectionStart);\n  };\n\n  const handleOnBlur = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>): void => {\n    const valueOnly = cleanValue({ value, ...cleanValueOptions });\n\n    if (valueOnly === '-' || !valueOnly) {\n      onBlurValue && onBlurValue(undefined, name);\n      setStateValue('');\n      return;\n    }\n\n    const fixedDecimals = fixedDecimalValue(valueOnly, decimalSeparator, fixedDecimalLength);\n\n    // Add padding or trim value to precision\n    const newValue = padTrimValue(fixedDecimals, decimalSeparator, precision || fixedDecimalLength);\n    onChange && onChange(newValue, name);\n    onBlurValue && onBlurValue(newValue, name);\n\n    const formattedValue = formatValue({ value: newValue, ...formatValueOptions });\n    setStateValue(formattedValue);\n  };\n\n  const handleOnKeyDown = ({ key }: React.KeyboardEvent<HTMLInputElement>) => {\n    if (step && (key === 'ArrowUp' || key === 'ArrowDown')) {\n      const currentValue =\n        Number(\n          userValue !== undefined\n            ? userValue\n            : cleanValue({ value: stateValue, ...cleanValueOptions })\n        ) || 0;\n      const newValue =\n        key === 'ArrowUp'\n          ? String(currentValue + Number(step))\n          : String(currentValue - Number(step));\n\n      processChange(newValue);\n    }\n  };\n\n  /* istanbul ignore next */\n  useEffect(() => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.setSelectionRange(cursor, cursor);\n    }\n  }, [cursor, inputRef]);\n\n  const formattedPropsValue =\n    userValue !== undefined\n      ? formatValue({ value: String(userValue), ...formatValueOptions })\n      : undefined;\n\n  return (\n    <input\n      type=\"text\"\n      inputMode=\"decimal\"\n      id={id}\n      name={name}\n      className={className}\n      onChange={handleOnChange}\n      onBlur={handleOnBlur}\n      onFocus={onFocus}\n      onKeyDown={handleOnKeyDown}\n      placeholder={placeholder}\n      disabled={disabled}\n      value={\n        formattedPropsValue !== undefined && stateValue !== '-' ? formattedPropsValue : stateValue\n      }\n      ref={inputRef}\n      {...props}\n    />\n  );\n};\n\nexport default CurrencyInput;\n","export * from './cleanValue';\nexport * from './fixedDecimalValue';\nexport * from './formatValue';\nexport * from './isNumber';\nexport * from './padTrimValue';\n","import { addSeparators } from './addSeparators';\n\ntype Props = {\n  /**\n   * Value to format\n   */\n  value: number | string | undefined;\n\n  /**\n   * Decimal separator\n   *\n   * Default = '.'\n   */\n  decimalSeparator?: string;\n\n  /**\n   * Group separator\n   *\n   * Default = ','\n   */\n  groupSeparator?: string;\n\n  /**\n   * Turn off separators\n   *\n   * This will override Group separators\n   *\n   * Default = false\n   */\n  turnOffSeparators?: boolean;\n\n  /**\n   * Prefix\n   */\n  prefix?: string;\n};\n\n/**\n * Format value with decimal separator, group separator and prefix\n */\nexport const formatValue = (props: Props): string => {\n  const {\n    value: _value,\n    groupSeparator = ',',\n    decimalSeparator = '.',\n    turnOffSeparators = false,\n    prefix,\n  } = props;\n\n  if (_value === '' || _value === undefined) {\n    return '';\n  }\n\n  const value = String(_value);\n\n  if (value === '-') {\n    return '-';\n  }\n\n  const isNegative = RegExp('^-\\\\d+').test(value);\n  const hasDecimalSeparator = decimalSeparator && value.includes(decimalSeparator);\n\n  const valueOnly = isNegative ? value.replace('-', '') : value;\n  const [int, decimals] = hasDecimalSeparator ? valueOnly.split(decimalSeparator) : [valueOnly];\n\n  const formattedInt = turnOffSeparators ? int : addSeparators(int, groupSeparator);\n\n  const includePrefix = prefix ? prefix : '';\n  const includeNegative = isNegative ? '-' : '';\n  const includeDecimals =\n    hasDecimalSeparator && decimals\n      ? `${decimalSeparator}${decimals}`\n      : hasDecimalSeparator\n      ? `${decimalSeparator}`\n      : '';\n\n  return `${includeNegative}${includePrefix}${formattedInt}${includeDecimals}`;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Example1 from './examples/Example1';\nimport Example2 from './examples/Example2';\nimport Example3 from './examples/Example3';\nimport FormatValuesExample from './examples/FormatValuesExample';\n\nReactDOM.render(<Example1 />, document.getElementById('example-1'));\n\nReactDOM.render(<Example2 />, document.getElementById('example-2'));\n\nReactDOM.render(<Example3 />, document.getElementById('example-3'));\n\nReactDOM.render(<FormatValuesExample />, document.getElementById('format-values-example'));\n","module.exports = ReactDOM;","import React, { FC, useState } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\n\nexport const Example1: FC = () => {\n  const limit = 1000;\n  const prefix = '£';\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const [className, setClassName] = useState('');\n  const [value, setValue] = useState<string | number>(999.99);\n  const [rawValue, setRawValue] = useState<string | undefined>(' ');\n  const [rawBlurValue, setRawBlurValue] = useState<string | undefined>(' ');\n\n  /**\n   * Handle validation\n   */\n  const validateValue = (value: string | undefined): void => {\n    const rawValue = value === undefined ? 'undefined' : value;\n    setRawValue(rawValue || ' ');\n\n    if (!value) {\n      setClassName('');\n      setValue('');\n      return;\n    }\n\n    if (Number.isNaN(Number(value))) {\n      setErrorMessage('Please enter a valid number');\n      setClassName('is-invalid');\n      return;\n    }\n\n    if (Number(value) > limit) {\n      setErrorMessage(`Max: ${prefix}${limit}`);\n      setClassName('is-invalid');\n      setValue(value);\n      return;\n    }\n\n    setClassName('is-valid');\n    setValue(value);\n  };\n\n  const handleOnBlurValue = (value: string | undefined) => {\n    const rawBlurValue = value === undefined ? 'undefined' : value;\n    setRawBlurValue(rawBlurValue || ' ');\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/Example1.tsx\">\n          <h2>Example 1</h2>\n        </a>\n        <ul>\n          <li>{`'£'`} prefix</li>\n          <li>Allows decimals (up to 2 decimal places)</li>\n          <li>Has default value (999.99)</li>\n          <li>Value is set programmatically (passed in via props)</li>\n        </ul>\n\n        <form className=\"needs-validation\">\n          <div className=\"row\">\n            <div className=\"form-group col\">\n              <label htmlFor=\"validationCustom01\">Please enter a value (max £1,000)</label>\n              <CurrencyInput\n                id=\"validationCustom01\"\n                name=\"input-1\"\n                defaultValue={999.99}\n                className={`form-control ${className}`}\n                value={value}\n                onChange={validateValue}\n                onBlurValue={handleOnBlurValue}\n                prefix={prefix}\n                precision={2}\n                step={1}\n              />\n              <div className=\"invalid-feedback\">{errorMessage}</div>\n            </div>\n            <div className=\"form-group col\">\n              <pre className=\"h-100 p-3 bg-dark text-white\">\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onChange:</div>\n                    {rawValue}\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onBlurValue:</div>\n                    {rawBlurValue}\n                  </div>\n                </div>\n              </pre>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Example1;\n","import { parseAbbrValue } from './parseAbbrValue';\nimport { removeSeparators } from './removeSeparators';\nimport { removeInvalidChars } from './removeInvalidChars';\nimport { escapeRegExp } from './escapeRegExp';\n\nexport type CleanValueOptions = {\n  value: string;\n  decimalSeparator?: string;\n  groupSeparator?: string;\n  allowDecimals?: boolean;\n  decimalsLimit?: number;\n  allowNegativeValue?: boolean;\n  turnOffAbbreviations?: boolean;\n  prefix?: string;\n};\n\n/**\n * Remove prefix, separators and extra decimals from value\n */\nexport const cleanValue = ({\n  value,\n  groupSeparator = ',',\n  decimalSeparator = '.',\n  allowDecimals = true,\n  decimalsLimit = 2,\n  allowNegativeValue = true,\n  turnOffAbbreviations = false,\n  prefix = '',\n}: CleanValueOptions): string => {\n  const abbreviations = turnOffAbbreviations ? [] : ['k', 'm', 'b'];\n  const isNegative = value.includes('-');\n\n  const [prefixWithValue, preValue] = RegExp(`(\\\\d+)-?${escapeRegExp(prefix)}`).exec(value) || [];\n  const withoutPrefix = prefix ? value.replace(prefixWithValue, '').concat(preValue) : value;\n  const withoutSeparators = removeSeparators(withoutPrefix, groupSeparator);\n  const withoutInvalidChars = removeInvalidChars(withoutSeparators, [\n    groupSeparator,\n    decimalSeparator,\n    ...abbreviations,\n  ]);\n\n  let valueOnly = withoutInvalidChars;\n\n  if (!turnOffAbbreviations) {\n    // disallow letter without number\n    if (abbreviations.some((letter) => letter === withoutInvalidChars.toLowerCase())) {\n      return '';\n    }\n    const parsed = parseAbbrValue(withoutInvalidChars, decimalSeparator);\n    if (parsed) {\n      valueOnly = String(parsed);\n    }\n  }\n\n  const includeNegative = isNegative && allowNegativeValue ? '-' : '';\n\n  if (String(valueOnly).includes(decimalSeparator)) {\n    const [int, decimals] = withoutInvalidChars.split(decimalSeparator);\n    const trimmedDecimals = decimalsLimit ? decimals.slice(0, decimalsLimit) : decimals;\n    const includeDecimals = allowDecimals ? `${decimalSeparator}${trimmedDecimals}` : '';\n\n    return `${includeNegative}${int}${includeDecimals}`;\n  }\n\n  return `${includeNegative}${valueOnly}`;\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Abbreviate number eg. 1000 = 1k\n *\n * Source: https://stackoverflow.com/a/9345181\n */\nexport const abbrValue = (value: number, decimalSeparator = '.', _decimalPlaces = 10): string => {\n  if (value > 999) {\n    let valueLength = ('' + value).length;\n    const p = Math.pow;\n    const d = p(10, _decimalPlaces);\n    valueLength -= valueLength % 3;\n\n    const abbrValue = Math.round((value * d) / p(10, valueLength)) / d + ' kMGTPE'[valueLength / 3];\n    return abbrValue.replace('.', decimalSeparator);\n  }\n\n  return String(value);\n};\n\ntype AbbrMap = { [key: string]: number };\n\nconst abbrMap: AbbrMap = { k: 1000, m: 1000000, b: 1000000000 };\n\n/**\n * Parse a value with abbreviation e.g 1k = 1000\n */\nexport const parseAbbrValue = (value: string, decimalSeparator = '.'): number | undefined => {\n  const reg = new RegExp(`(\\\\d+(${escapeRegExp(decimalSeparator)}\\\\d+)?)([kmb])$`, 'i');\n  const match = value.match(reg);\n\n  if (match) {\n    const [, digits, , abbr] = match;\n    const multiplier = abbrMap[abbr.toLowerCase()];\n    if (digits && multiplier) {\n      return Number(digits.replace(decimalSeparator, '.')) * multiplier;\n    }\n  }\n\n  return undefined;\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Remove group separator from value eg. 1,000 > 1000\n */\nexport const removeSeparators = (value: string, separator = ','): string => {\n  const reg = new RegExp(escapeRegExp(separator), 'g');\n  return value.replace(reg, '');\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Remove invalid characters\n */\nexport const removeInvalidChars = (value: string, validChars: ReadonlyArray<string>): string => {\n  const chars = escapeRegExp(validChars.join(''));\n  const reg = new RegExp(`[^\\\\d${chars}]`, 'gi');\n  return value.replace(reg, '');\n};\n","export const fixedDecimalValue = (\n  value: string,\n  decimalSeparator: string,\n  fixedDecimalLength?: number\n): string => {\n  if (fixedDecimalLength && value.length > 1) {\n    if (value.includes(decimalSeparator)) {\n      const [int, decimals] = value.split(decimalSeparator);\n      if (decimals.length > fixedDecimalLength) {\n        return `${int}${decimalSeparator}${decimals.slice(0, fixedDecimalLength)}`;\n      }\n    }\n\n    const reg =\n      value.length > fixedDecimalLength\n        ? new RegExp(`(\\\\d+)(\\\\d{${fixedDecimalLength}})`)\n        : new RegExp(`(\\\\d)(\\\\d+)`);\n\n    const match = value.match(reg);\n    if (match) {\n      const [, int, decimals] = match;\n      return `${int}${decimalSeparator}${decimals}`;\n    }\n  }\n\n  return value;\n};\n","/**\n * Add group separator to value eg. 1000 > 1,000\n */\nexport const addSeparators = (value: string, separator = ','): string => {\n  return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n};\n","export const isNumber = (input: string): boolean => RegExp(/\\d/, 'gi').test(input);\n","export const padTrimValue = (value: string, decimalSeparator = '.', precision?: number): string => {\n  if (!precision || value === '' || value === undefined) {\n    return value;\n  }\n\n  if (!value.match(/\\d/g)) {\n    return '';\n  }\n\n  const [int, decimals] = value.split(decimalSeparator);\n  let newValue = decimals || '';\n\n  if (newValue.length < precision) {\n    while (newValue.length < precision) {\n      newValue += '0';\n    }\n  } else {\n    newValue = newValue.slice(0, precision);\n  }\n\n  return `${int}${decimalSeparator}${newValue}`;\n};\n","import React, { FC, useState } from 'react';\nimport { hot } from 'react-hot-loader';\nimport CurrencyInput from '../components/CurrencyInput';\n\nexport const Example2: FC = () => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [className, setClassName] = useState('');\n  const [rawValue, setRawValue] = useState<string | undefined>(' ');\n  const [rawBlurValue, setRawBlurValue] = useState<string | undefined>(' ');\n\n  const validateValue = (value: string | undefined): void => {\n    const rawValue = value === undefined ? 'undefined' : value;\n    setRawValue(rawValue || ' ');\n\n    if (!value) {\n      setClassName('');\n    } else if (Number.isNaN(Number(value))) {\n      setErrorMessage('Please enter a valid number');\n      setClassName('is-invalid');\n    } else {\n      setClassName('is-valid');\n    }\n  };\n\n  const handleOnBlurValue = (value: string | undefined) => {\n    const rawBlurValue = value === undefined ? 'undefined' : value;\n    setRawBlurValue(rawBlurValue || ' ');\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/Example2.tsx\">\n          <h2>Example 2</h2>\n        </a>\n        <ul>\n          <li>{`'$'`} prefix</li>\n          <li>Has placeholder</li>\n          <li>Does not allow decimals</li>\n          <li>Value is stored via component state</li>\n        </ul>\n        <form className=\"needs-validation\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"validation-example-2-field\">Please enter a value:</label>\n              <CurrencyInput\n                id=\"validation-example-2-field\"\n                placeholder=\"$1,234,567\"\n                allowDecimals={false}\n                className={`form-control ${className}`}\n                onChange={validateValue}\n                onBlurValue={handleOnBlurValue}\n                prefix={'$'}\n                step={10}\n              />\n              <div className=\"invalid-feedback\">{errorMessage}</div>\n            </div>\n            <div className=\"form-group col\">\n              <pre className=\"h-100 p-3 bg-dark text-white\">\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onChange:</div>\n                    {rawValue}\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onBlurValue:</div>\n                    {rawBlurValue}\n                  </div>\n                </div>\n              </pre>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default hot(module)(Example2);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (process.env.NODE_ENV === 'test') {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (typeof window === 'undefined') {\n  // this is just server environment\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (!module.hot) {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n  module.exports.AppContainer.warnAboutHMRDisabled = true;\n  module.exports.hot.shouldWrapWithAppContainer = true;\n} else {\n  var evalAllowed = false;\n  var evalError = null;\n  try {\n    eval('evalAllowed = true');\n  } catch (e) {\n    // eval not allowed due to CSP\n    evalError = e && e.message ? e.message : 'unknown reason';\n  }\n\n  // TODO: dont use eval to update methods. see #1273\n  // RHL needs setPrototypeOf to operate Component inheritance, and eval to patch methods\n  var jsFeaturesPresent = !!Object.setPrototypeOf;\n\n  if (!jsFeaturesPresent || !evalAllowed) {\n    // we are not in prod mode, but RHL could not be activated\n    console.warn(\n      'React-Hot-Loader is not supported in this environment:',\n      [\n        !jsFeaturesPresent && \"some JS features are missing\",\n        !evalAllowed && \"`eval` is not allowed(\" + evalError + \")\"\n      ].join(','),\n      '.'\n    );\n    module.exports = require('./dist/react-hot-loader.production.min.js');\n  } else {\n    module.exports = window.reactHotLoaderGlobal = require('./dist/react-hot-loader.development.js');\n  }\n}\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(require(\"react\"));function AppContainer(e){return AppContainer.warnAboutHMRDisabled&&(AppContainer.warnAboutHMRDisabled=!0,console.error(\"React-Hot-Loader: misconfiguration detected, using production version in non-production environment.\"),console.error(\"React-Hot-Loader: Hot Module Replacement is not enabled.\")),React.Children.only(e.children)}AppContainer.warnAboutHMRDisabled=!1;var hot=function e(){return e.shouldWrapWithAppContainer?function(e){return function(n){return React.createElement(AppContainer,null,React.createElement(e,n))}}:function(e){return e}};hot.shouldWrapWithAppContainer=!1;var areComponentsEqual=function(e,n){return e===n},setConfig=function(){},cold=function(e){return e},configureComponent=function(){};exports.AppContainer=AppContainer,exports.hot=hot,exports.areComponentsEqual=areComponentsEqual,exports.setConfig=setConfig,exports.cold=cold,exports.configureComponent=configureComponent;\n","import React, { FC, useReducer } from 'react';\nimport CurrencyInput, { formatValue } from '../';\n\ntype Field = {\n  value: number | undefined;\n  validationClass: string;\n  errorMessage: string;\n};\n\ntype ExampleState = {\n  field1: Field;\n  field2: Field;\n};\n\ntype Action = {\n  fieldName: string;\n  value: Field;\n};\n\nfunction reducer(state: ExampleState, { fieldName, value }: Action): ExampleState {\n  return {\n    ...state,\n    [fieldName]: value,\n  };\n}\n\nconst initialState: ExampleState = {\n  field1: {\n    value: 100,\n    validationClass: '',\n    errorMessage: '',\n  },\n  field2: {\n    value: 200,\n    validationClass: '',\n    errorMessage: '',\n  },\n};\n\nexport const Example3: FC = () => {\n  const prefix = '£';\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleOnChange = (_value: string | undefined, fieldName: string | undefined): void => {\n    if (!fieldName) {\n      return;\n    }\n\n    if (!_value) {\n      return dispatch({\n        fieldName,\n        value: {\n          value: undefined,\n          validationClass: '',\n          errorMessage: '',\n        },\n      });\n    }\n\n    const value = Number(_value);\n\n    if (!Number.isNaN(value)) {\n      dispatch({\n        fieldName,\n        value: {\n          value,\n          validationClass: 'is-valid',\n          errorMessage: '',\n        },\n      });\n    } else {\n      dispatch({\n        fieldName,\n        value: {\n          value,\n          validationClass: 'is-invalid',\n          errorMessage: 'Please enter a valid number',\n        },\n      });\n    }\n  };\n\n  const total = (state.field1.value || 0) + (state.field2.value || 0);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/Example3.tsx\">\n          <h2>Example 3</h2>\n        </a>\n        <ul>\n          <li>Add two values together</li>\n          <li>Format the total value</li>\n        </ul>\n\n        <form className=\"needs-validation\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"validation-example-3-field1\">Value 1</label>\n              <CurrencyInput\n                id=\"validation-example-3-field1\"\n                name=\"field1\"\n                className={`form-control ${state.field1.validationClass}`}\n                value={state.field1.value}\n                onChange={handleOnChange}\n                prefix={prefix}\n              />\n              <div className=\"invalid-feedback\">{state.field1.errorMessage}</div>\n            </div>\n\n            <div className=\"col\">\n              <label htmlFor=\"validation-example-3-field2\">Value 2</label>\n              <CurrencyInput\n                id=\"validation-example-3-field2\"\n                name=\"field2\"\n                className={`form-control ${state.field2.validationClass}`}\n                value={state.field2.value}\n                onChange={handleOnChange}\n                prefix={prefix}\n              />\n              <div className=\"invalid-feedback\">{state.field1.errorMessage}</div>\n            </div>\n\n            <div className=\"col\">\n              <div className=\"\">\n                <label>Total:</label>\n                <div className=\"h3\">{formatValue({ prefix, value: total })}</div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Example3;\n","import CurrencyInput from './components/CurrencyInput';\n\nexport default CurrencyInput;\nexport { formatValue } from './components/utils/formatValue';\n","import React, { FC, useState } from 'react';\nimport { formatValue } from '../components/utils';\n\nconst FormatValuesExample: FC = () => {\n  const [value, setValue] = useState('123456789.999');\n  const [prefix, setPrefix] = useState('$');\n  const [groupSeparator, setGroupSeparator] = useState(',');\n  const [decimalSeparator, setDecimalSeparator] = useState('.');\n  const [turnOffSeparators, setTurnOffSeparators] = useState(false);\n\n  const handleValueChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(value);\n  };\n\n  const handlePrefixChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n    setPrefix(value);\n  };\n\n  const handleGroupSeparatorChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setGroupSeparator(value);\n  };\n\n  const handleDecimalSeparatorChange = ({\n    target: { value: newDecimalSeparator },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setDecimalSeparator(newDecimalSeparator);\n  };\n\n  const handleTurnOffSeparatorChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setTurnOffSeparators(value === 'true' ? true : false);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/FormatValuesExample.tsx\">\n          <h2>Format values example</h2>\n        </a>\n        <ul>\n          <li>Use the `formatValue` function convert a value to a user friendly string</li>\n        </ul>\n        <div className=\"col-10\">\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <label>Value</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={value}\n                onChange={handleValueChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <label>Prefix</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={prefix}\n                onChange={handlePrefixChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <label>Group Separator</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={groupSeparator}\n                onChange={handleGroupSeparatorChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <label>Decimal Separator</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={decimalSeparator}\n                onChange={handleDecimalSeparatorChange}\n              />\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col mt-3\">\n              Turn off separators:\n              <div className=\"ml-3 custom-control custom-radio custom-control-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"turnOffSeparatorsTrue\"\n                  className=\"custom-control-input\"\n                  value=\"true\"\n                  onChange={handleTurnOffSeparatorChange}\n                  checked={turnOffSeparators}\n                />\n                <label className=\"custom-control-label\" htmlFor=\"turnOffSeparatorsTrue\">\n                  True\n                </label>\n              </div>\n              <div className=\"custom-control custom-radio custom-control-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"turnOffSeparatorsFalse\"\n                  className=\"custom-control-input\"\n                  value=\"false\"\n                  onChange={handleTurnOffSeparatorChange}\n                  checked={turnOffSeparators === false}\n                />\n                <label className=\"custom-control-label\" htmlFor=\"turnOffSeparatorsFalse\">\n                  False\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-5\">\n            Formatted value:\n            <div className=\"display-4\">\n              {formatValue({\n                value,\n                groupSeparator,\n                decimalSeparator,\n                turnOffSeparators,\n                prefix,\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatValuesExample;\n"],"sourceRoot":""}