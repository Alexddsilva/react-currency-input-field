{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/components/utils/escapeRegExp.ts","webpack:///./src/components/CurrencyInput.tsx","webpack:///./src/components/utils/index.ts","webpack:///./src/components/utils/formatValue.ts","webpack:///./src/example.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/examples/Example1.tsx","webpack:///./src/components/utils/cleanValue.ts","webpack:///./src/components/utils/parseAbbrValue.ts","webpack:///./src/components/utils/removeSeparators.ts","webpack:///./src/components/utils/removeInvalidChars.ts","webpack:///./src/components/utils/fixedDecimalValue.ts","webpack:///./src/components/utils/addSeparators.ts","webpack:///./src/components/utils/isNumber.ts","webpack:///./src/components/utils/padTrimValue.ts","webpack:///./src/examples/Example2.tsx","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/react-hot-loader/index.js","webpack:///./node_modules/react-hot-loader/dist/react-hot-loader.production.min.js","webpack:///./src/examples/Example3.tsx","webpack:///./src/index.ts","webpack:///./src/examples/FormatValuesExample.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","escapeRegExp","stringToGoIntoTheRegex","replace","CurrencyInput","allowDecimals","allowNegativeValue","id","className","decimalsLimit","defaultValue","disabled","userMaxLength","onChange","onBlurValue","fixedDecimalLength","placeholder","precision","prefix","decimalSeparator","groupSeparator","turnOffSeparators","props","Error","isNumber","formatValueOptions","cleanValueOptions","_defaultValue","undefined","formatValue","String","useState","stateValue","setStateValue","cursor","setCursor","inputRef","useRef","useEffect","current","setSelectionRange","formattedPropsValue","type","inputMode","target","selectionStart","valueOnly","cleanValue","length","formattedValue","onBlur","fixedDecimals","fixedDecimalValue","newValue","padTrimValue","onFocus","ref","_value","isNegative","RegExp","test","hasDecimalSeparator","includes","split","int","decimals","addSeparators","render","document","getElementById","ReactDOM","Example1","errorMessage","setErrorMessage","setClassName","setValue","rawValue","setRawValue","rawBlurValue","setRawBlurValue","href","htmlFor","Number","isNaN","exec","prefixWithValue","preValue","withoutPrefix","concat","withoutSeparators","removeSeparators","withoutInvalidChars","removeInvalidChars","parsed","parseAbbrValue","includeNegative","trimmedDecimals","slice","abbrValue","_decimalPlaces","valueLength","Math","pow","round","abbrMap","k","b","reg","match","digits","abbr","multiplier","toLowerCase","separator","validChars","chars","join","input","Example2","hot","webpackPolyfill","deprecate","paths","children","e","default","AppContainer","warnAboutHMRDisabled","console","error","Children","only","shouldWrapWithAppContainer","createElement","areComponentsEqual","setConfig","cold","configureComponent","reducer","state","fieldName","initialState","field1","validationClass","field2","Example3","useReducer","dispatch","handleOnChange","total","setPrefix","setGroupSeparator","setDecimalSeparator","setTurnOffSeparators","handleTurnOffSeparatorChange","newDecimalSeparator","checked"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = React;","/**\n * Escape regex char\n *\n * See: https://stackoverflow.com/questions/17885855/use-dynamic-variable-string-as-regex-pattern-in-javascript\n */\nexport const escapeRegExp = (stringToGoIntoTheRegex: string): string => {\n  return stringToGoIntoTheRegex.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport { CurrencyInputProps } from './CurrencyInputProps';\nimport { isNumber, cleanValue, fixedDecimalValue, formatValue, padTrimValue } from './utils';\n\nexport const CurrencyInput: FC<CurrencyInputProps> = ({\n  allowDecimals = true,\n  allowNegativeValue = true,\n  id,\n  name,\n  className,\n  decimalsLimit,\n  defaultValue,\n  disabled = false,\n  maxLength: userMaxLength,\n  value,\n  onChange,\n  onBlurValue,\n  fixedDecimalLength,\n  placeholder,\n  precision,\n  prefix,\n  decimalSeparator = '.',\n  groupSeparator = ',',\n  turnOffSeparators = false,\n  ...props\n}: CurrencyInputProps) => {\n  if (decimalSeparator === groupSeparator) {\n    throw new Error('decimalSeparator cannot be the same as groupSeparator');\n  }\n\n  if (isNumber(decimalSeparator)) {\n    throw new Error('decimalSeparator cannot be a number');\n  }\n\n  if (isNumber(groupSeparator)) {\n    throw new Error('groupSeparator cannot be a number');\n  }\n\n  const formatValueOptions = {\n    decimalSeparator,\n    groupSeparator,\n    turnOffSeparators,\n    prefix,\n  };\n\n  const cleanValueOptions = {\n    decimalSeparator,\n    groupSeparator,\n    allowDecimals,\n    decimalsLimit: decimalsLimit || fixedDecimalLength || 2,\n    allowNegativeValue,\n    prefix,\n  };\n\n  const _defaultValue =\n    defaultValue !== undefined\n      ? formatValue({ value: String(defaultValue), ...formatValueOptions })\n      : '';\n  const [stateValue, setStateValue] = useState(_defaultValue);\n  const [cursor, setCursor] = useState(0);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const onFocus = (): number => (stateValue ? stateValue.length : 0);\n\n  const processChange = ({\n    target: { value, selectionStart },\n  }: React.ChangeEvent<HTMLInputElement>): void => {\n    const valueOnly = cleanValue({ value: String(value), ...cleanValueOptions });\n\n    if (!valueOnly) {\n      onChange && onChange(undefined, name);\n      setStateValue('');\n      return;\n    }\n\n    if (userMaxLength && valueOnly.length > userMaxLength) {\n      return;\n    }\n\n    if (valueOnly === '-') {\n      onChange && onChange(undefined, name);\n      setStateValue(value);\n      return;\n    }\n\n    const formattedValue = formatValue({ value: valueOnly, ...formatValueOptions });\n\n    /* istanbul ignore next */\n    if (selectionStart) {\n      const cursor = selectionStart + (formattedValue.length - value.length) || 1;\n      setCursor(cursor);\n    }\n\n    setStateValue(formattedValue);\n\n    onChange && onChange(valueOnly, name);\n  };\n\n  const handleOnBlur = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>): void => {\n    const valueOnly = cleanValue({ value, ...cleanValueOptions });\n\n    if (valueOnly === '-' || !valueOnly) {\n      onBlurValue && onBlurValue(undefined, name);\n      setStateValue('');\n      return;\n    }\n\n    const fixedDecimals = fixedDecimalValue(valueOnly, decimalSeparator, fixedDecimalLength);\n\n    // Add padding or trim value to precision\n    const newValue = padTrimValue(fixedDecimals, decimalSeparator, precision || fixedDecimalLength);\n    onChange && onChange(newValue, name);\n    onBlurValue && onBlurValue(newValue, name);\n\n    const formattedValue = formatValue({ value: newValue, ...formatValueOptions });\n    setStateValue(formattedValue);\n  };\n\n  /* istanbul ignore next */\n  useEffect(() => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.setSelectionRange(cursor, cursor);\n    }\n  }, [cursor, inputRef]);\n\n  const formattedPropsValue =\n    value !== undefined ? formatValue({ value: String(value), ...formatValueOptions }) : undefined;\n\n  return (\n    <input\n      type=\"text\"\n      inputMode=\"decimal\"\n      id={id}\n      name={name}\n      className={className}\n      onChange={processChange}\n      onBlur={handleOnBlur}\n      onFocus={onFocus}\n      placeholder={placeholder}\n      disabled={disabled}\n      value={\n        formattedPropsValue !== undefined && stateValue !== '-' ? formattedPropsValue : stateValue\n      }\n      ref={inputRef}\n      {...props}\n    />\n  );\n};\n\nexport default CurrencyInput;\n","export * from './cleanValue';\nexport * from './fixedDecimalValue';\nexport * from './formatValue';\nexport * from './isNumber';\nexport * from './padTrimValue';\n","import { addSeparators } from './addSeparators';\n\ntype Props = {\n  /**\n   * Value to format\n   */\n  value: number | string | undefined;\n\n  /**\n   * Decimal separator\n   *\n   * Default = '.'\n   */\n  decimalSeparator?: string;\n\n  /**\n   * Group separator\n   *\n   * Default = ','\n   */\n  groupSeparator?: string;\n\n  /**\n   * Turn off separators\n   *\n   * This will override Group separators\n   *\n   * Default = false\n   */\n  turnOffSeparators?: boolean;\n\n  /**\n   * Prefix\n   */\n  prefix?: string;\n};\n\n/**\n * Format value with decimal separator, group separator and prefix\n */\nexport const formatValue = (props: Props): string => {\n  const {\n    value: _value,\n    groupSeparator = ',',\n    decimalSeparator = '.',\n    turnOffSeparators = false,\n    prefix,\n  } = props;\n\n  if (_value === '' || _value === undefined) {\n    return '';\n  }\n\n  const value = String(_value);\n\n  if (value === '-') {\n    return '-';\n  }\n\n  const isNegative = RegExp('^-\\\\d+').test(value);\n  const hasDecimalSeparator = decimalSeparator && value.includes(decimalSeparator);\n\n  const valueOnly = isNegative ? value.replace('-', '') : value;\n  const [int, decimals] = hasDecimalSeparator ? valueOnly.split(decimalSeparator) : [valueOnly];\n\n  const formattedInt = turnOffSeparators ? int : addSeparators(int, groupSeparator);\n\n  const includePrefix = prefix ? prefix : '';\n  const includeNegative = isNegative ? '-' : '';\n  const includeDecimals =\n    hasDecimalSeparator && decimals\n      ? `${decimalSeparator}${decimals}`\n      : hasDecimalSeparator\n      ? `${decimalSeparator}`\n      : '';\n\n  return `${includeNegative}${includePrefix}${formattedInt}${includeDecimals}`;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Example1 from './examples/Example1';\nimport Example2 from './examples/Example2';\nimport Example3 from './examples/Example3';\nimport FormatValuesExample from './examples/FormatValuesExample';\n\nReactDOM.render(<Example1 />, document.getElementById('example-1'));\n\nReactDOM.render(<Example2 />, document.getElementById('example-2'));\n\nReactDOM.render(<Example3 />, document.getElementById('example-3'));\n\nReactDOM.render(<FormatValuesExample />, document.getElementById('format-values-example'));\n","module.exports = ReactDOM;","import React, { FC, useState } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\n\nexport const Example1: FC = () => {\n  const limit = 1000;\n  const prefix = '£';\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const [className, setClassName] = useState('');\n  const [value, setValue] = useState<string | number>(999.99);\n  const [rawValue, setRawValue] = useState<string | undefined>(' ');\n  const [rawBlurValue, setRawBlurValue] = useState<string | undefined>(' ');\n\n  /**\n   * Handle validation\n   */\n  const validateValue = (value: string | undefined): void => {\n    const rawValue = value === undefined ? 'undefined' : value;\n    setRawValue(rawValue || ' ');\n\n    if (!value) {\n      setClassName('');\n      setValue('');\n      return;\n    }\n\n    if (Number.isNaN(Number(value))) {\n      setErrorMessage('Please enter a valid number');\n      setClassName('is-invalid');\n      return;\n    }\n\n    if (Number(value) > limit) {\n      setErrorMessage(`Max: ${prefix}${limit}`);\n      setClassName('is-invalid');\n      setValue(value);\n      return;\n    }\n\n    setClassName('is-valid');\n    setValue(value);\n  };\n\n  const handleOnBlurValue = (value: string | undefined) => {\n    const rawBlurValue = value === undefined ? 'undefined' : value;\n    setRawBlurValue(rawBlurValue || ' ');\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/Example1.tsx\">\n          <h2>Example 1</h2>\n        </a>\n        <ul>\n          <li>{`'£'`} prefix</li>\n          <li>Allows decimals (up to 2 decimal places)</li>\n          <li>Has default value (999.99)</li>\n          <li>Value is set programmatically (passed in via props)</li>\n        </ul>\n\n        <form className=\"needs-validation\">\n          <div className=\"row\">\n            <div className=\"form-group col\">\n              <label htmlFor=\"validationCustom01\">Please enter a value (max £1,000)</label>\n              <CurrencyInput\n                id=\"validationCustom01\"\n                name=\"input-1\"\n                defaultValue={999.99}\n                className={`form-control ${className}`}\n                value={value}\n                onChange={validateValue}\n                onBlurValue={handleOnBlurValue}\n                prefix={prefix}\n                precision={2}\n              />\n              <div className=\"invalid-feedback\">{errorMessage}</div>\n            </div>\n            <div className=\"form-group col\">\n              <pre className=\"h-100 p-3 bg-dark text-white\">\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onChange:</div>\n                    {rawValue}\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onBlurValue:</div>\n                    {rawBlurValue}\n                  </div>\n                </div>\n              </pre>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Example1;\n","import { parseAbbrValue } from './parseAbbrValue';\nimport { removeSeparators } from './removeSeparators';\nimport { removeInvalidChars } from './removeInvalidChars';\nimport { escapeRegExp } from './escapeRegExp';\n\ntype Props = {\n  value: string;\n  decimalSeparator?: string;\n  groupSeparator?: string;\n  allowDecimals?: boolean;\n  decimalsLimit?: number;\n  allowNegativeValue?: boolean;\n  prefix?: string;\n};\n\n/**\n * Remove prefix, separators and extra decimals from value\n */\nexport const cleanValue = ({\n  value,\n  groupSeparator = ',',\n  decimalSeparator = '.',\n  allowDecimals = true,\n  decimalsLimit = 2,\n  allowNegativeValue = true,\n  prefix = '',\n}: Props): string => {\n  const isNegative = value.includes('-');\n\n  const [prefixWithValue, preValue] = RegExp(`(\\\\d+)-?${escapeRegExp(prefix)}`).exec(value) || [];\n  const withoutPrefix = prefix ? value.replace(prefixWithValue, '').concat(preValue) : value;\n  const withoutSeparators = removeSeparators(withoutPrefix, groupSeparator);\n  const withoutInvalidChars = removeInvalidChars(withoutSeparators, [\n    groupSeparator,\n    decimalSeparator,\n    'k',\n    'm',\n    'b',\n  ]);\n\n  const parsed = parseAbbrValue(withoutInvalidChars, decimalSeparator) || withoutInvalidChars;\n  const includeNegative = isNegative && allowNegativeValue ? '-' : '';\n\n  if (String(parsed).includes(decimalSeparator)) {\n    const [int, decimals] = withoutInvalidChars.split(decimalSeparator);\n    const trimmedDecimals = decimalsLimit ? decimals.slice(0, decimalsLimit) : decimals;\n    const includeDecimals = allowDecimals ? `${decimalSeparator}${trimmedDecimals}` : '';\n\n    return `${includeNegative}${int}${includeDecimals}`;\n  }\n\n  return `${includeNegative}${parsed}`;\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Abbreviate number eg. 1000 = 1k\n *\n * Source: https://stackoverflow.com/a/9345181\n */\nexport const abbrValue = (value: number, decimalSeparator = '.', _decimalPlaces = 10): string => {\n  if (value > 999) {\n    let valueLength = ('' + value).length;\n    const p = Math.pow;\n    const d = p(10, _decimalPlaces);\n    valueLength -= valueLength % 3;\n\n    const abbrValue = Math.round((value * d) / p(10, valueLength)) / d + ' kMGTPE'[valueLength / 3];\n    return abbrValue.replace('.', decimalSeparator);\n  }\n\n  return String(value);\n};\n\ntype AbbrMap = { [key: string]: number };\n\nconst abbrMap: AbbrMap = { k: 1000, m: 1000000, b: 1000000000 };\n\n/**\n * Parse a value with abbreviation e.g 1k = 1000\n */\nexport const parseAbbrValue = (value: string, decimalSeparator = '.'): number | undefined => {\n  const reg = new RegExp(`(\\\\d+(${escapeRegExp(decimalSeparator)}\\\\d+)?)([kmb])$`, 'i');\n  const match = value.match(reg);\n\n  if (match) {\n    const [, digits, , abbr] = match;\n    const multiplier = abbr ? abbrMap[abbr.toLowerCase()] : null;\n    if (digits && multiplier) {\n      return Number(digits.replace(decimalSeparator, '.')) * multiplier;\n    }\n  }\n\n  return undefined;\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Remove group separator from value eg. 1,000 > 1000\n */\nexport const removeSeparators = (value: string, separator = ','): string => {\n  const reg = new RegExp(escapeRegExp(separator), 'g');\n  return value.replace(reg, '');\n};\n","import { escapeRegExp } from './escapeRegExp';\n\n/**\n * Remove invalid characters\n */\nexport const removeInvalidChars = (value: string, validChars: ReadonlyArray<string>): string => {\n  const chars = escapeRegExp(validChars.join(''));\n  const reg = new RegExp(`[^\\\\d${chars}]`, 'gi');\n  return value.replace(reg, '');\n};\n","export const fixedDecimalValue = (\n  value: string,\n  decimalSeparator: string,\n  fixedDecimalLength?: number\n): string => {\n  if (fixedDecimalLength && value.length > 1) {\n    if (value.includes(decimalSeparator)) {\n      const [int, decimals] = value.split(decimalSeparator);\n      if (decimals.length > fixedDecimalLength) {\n        return `${int}${decimalSeparator}${decimals.slice(0, fixedDecimalLength)}`;\n      }\n    }\n\n    const reg =\n      value.length > fixedDecimalLength\n        ? new RegExp(`(\\\\d+)(\\\\d{${fixedDecimalLength}})`)\n        : new RegExp(`(\\\\d)(\\\\d+)`);\n\n    const match = value.match(reg);\n    if (match) {\n      const [, int, decimals] = match;\n      return `${int}${decimalSeparator}${decimals}`;\n    }\n  }\n\n  return value;\n};\n","/**\n * Add group separator to value eg. 1000 > 1,000\n */\nexport const addSeparators = (value: string, separator = ','): string => {\n  return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n};\n","export const isNumber = (input: string): boolean => RegExp(/\\d/, 'gi').test(input);\n","export const padTrimValue = (value: string, decimalSeparator = '.', precision?: number): string => {\n  if (!precision || value === '' || value === undefined) {\n    return value;\n  }\n\n  if (!value.match(/\\d/g)) {\n    return '';\n  }\n\n  const [int, decimals] = value.split(decimalSeparator);\n  let newValue = decimals || '';\n\n  if (newValue.length < precision) {\n    while (newValue.length < precision) {\n      newValue += '0';\n    }\n  } else {\n    newValue = newValue.slice(0, precision);\n  }\n\n  return `${int}${decimalSeparator}${newValue}`;\n};\n","import React, { FC, useState } from 'react';\nimport { hot } from 'react-hot-loader';\nimport CurrencyInput from '../components/CurrencyInput';\n\nexport const Example2: FC = () => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [className, setClassName] = useState('');\n  const [rawValue, setRawValue] = useState<string | undefined>(' ');\n  const [rawBlurValue, setRawBlurValue] = useState<string | undefined>(' ');\n\n  const validateValue = (value: string | undefined): void => {\n    const rawValue = value === undefined ? 'undefined' : value;\n    setRawValue(rawValue || ' ');\n\n    if (!value) {\n      setClassName('');\n    } else if (Number.isNaN(Number(value))) {\n      setErrorMessage('Please enter a valid number');\n      setClassName('is-invalid');\n    } else {\n      setClassName('is-valid');\n    }\n  };\n\n  const handleOnBlurValue = (value: string | undefined) => {\n    const rawBlurValue = value === undefined ? 'undefined' : value;\n    setRawBlurValue(rawBlurValue || ' ');\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/Example2.tsx\">\n          <h2>Example 2</h2>\n        </a>\n        <ul>\n          <li>{`'$'`} prefix</li>\n          <li>Has placeholder</li>\n          <li>Does not allow decimals</li>\n          <li>Value is stored via component state</li>\n        </ul>\n        <form className=\"needs-validation\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"validation-example-2-field\">Please enter a value:</label>\n              <CurrencyInput\n                id=\"validation-example-2-field\"\n                placeholder=\"$1,234,567\"\n                allowDecimals={false}\n                className={`form-control ${className}`}\n                onChange={validateValue}\n                onBlurValue={handleOnBlurValue}\n                prefix={'$'}\n              />\n              <div className=\"invalid-feedback\">{errorMessage}</div>\n            </div>\n            <div className=\"form-group col\">\n              <pre className=\"h-100 p-3 bg-dark text-white\">\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onChange:</div>\n                    {rawValue}\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-muted mr-3\">onBlurValue:</div>\n                    {rawBlurValue}\n                  </div>\n                </div>\n              </pre>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default hot(module)(Example2);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (process.env.NODE_ENV === 'test') {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (typeof window === 'undefined') {\n  // this is just server environment\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (!module.hot) {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n  module.exports.AppContainer.warnAboutHMRDisabled = true;\n  module.exports.hot.shouldWrapWithAppContainer = true;\n} else {\n  var evalAllowed = false;\n  var evalError = null;\n  try {\n    eval('evalAllowed = true');\n  } catch (e) {\n    // eval not allowed due to CSP\n    evalError = e && e.message ? e.message : 'unknown reason';\n  }\n\n  // TODO: dont use eval to update methods. see #1273\n  // RHL needs setPrototypeOf to operate Component inheritance, and eval to patch methods\n  var jsFeaturesPresent = !!Object.setPrototypeOf;\n\n  if (!jsFeaturesPresent || !evalAllowed) {\n    // we are not in prod mode, but RHL could not be activated\n    console.warn(\n      'React-Hot-Loader is not supported in this environment:',\n      [\n        !jsFeaturesPresent && \"some JS features are missing\",\n        !evalAllowed && \"`eval` is not allowed(\" + evalError + \")\"\n      ].join(','),\n      '.'\n    );\n    module.exports = require('./dist/react-hot-loader.production.min.js');\n  } else {\n    module.exports = window.reactHotLoaderGlobal = require('./dist/react-hot-loader.development.js');\n  }\n}\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(require(\"react\"));function AppContainer(e){return AppContainer.warnAboutHMRDisabled&&(AppContainer.warnAboutHMRDisabled=!0,console.error(\"React-Hot-Loader: misconfiguration detected, using production version in non-production environment.\"),console.error(\"React-Hot-Loader: Hot Module Replacement is not enabled.\")),React.Children.only(e.children)}AppContainer.warnAboutHMRDisabled=!1;var hot=function e(){return e.shouldWrapWithAppContainer?function(e){return function(n){return React.createElement(AppContainer,null,React.createElement(e,n))}}:function(e){return e}};hot.shouldWrapWithAppContainer=!1;var areComponentsEqual=function(e,n){return e===n},setConfig=function(){},cold=function(e){return e},configureComponent=function(){};exports.AppContainer=AppContainer,exports.hot=hot,exports.areComponentsEqual=areComponentsEqual,exports.setConfig=setConfig,exports.cold=cold,exports.configureComponent=configureComponent;\n","import React, { FC, useReducer } from 'react';\nimport CurrencyInput, { formatValue } from '../';\n\ntype Field = {\n  value: number | undefined;\n  validationClass: string;\n  errorMessage: string;\n};\n\ntype ExampleState = {\n  field1: Field;\n  field2: Field;\n};\n\ntype Action = {\n  fieldName: string;\n  value: Field;\n};\n\nfunction reducer(state: ExampleState, { fieldName, value }: Action): ExampleState {\n  return {\n    ...state,\n    [fieldName]: value,\n  };\n}\n\nconst initialState: ExampleState = {\n  field1: {\n    value: 100,\n    validationClass: '',\n    errorMessage: '',\n  },\n  field2: {\n    value: 200,\n    validationClass: '',\n    errorMessage: '',\n  },\n};\n\nexport const Example3: FC = () => {\n  const prefix = '£';\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleOnChange = (_value: string | undefined, fieldName: string | undefined): void => {\n    if (!fieldName) {\n      return;\n    }\n\n    if (!_value) {\n      return dispatch({\n        fieldName,\n        value: {\n          value: undefined,\n          validationClass: '',\n          errorMessage: '',\n        },\n      });\n    }\n\n    const value = Number(_value);\n\n    if (!Number.isNaN(value)) {\n      dispatch({\n        fieldName,\n        value: {\n          value,\n          validationClass: 'is-valid',\n          errorMessage: '',\n        },\n      });\n    } else {\n      dispatch({\n        fieldName,\n        value: {\n          value,\n          validationClass: 'is-invalid',\n          errorMessage: 'Please enter a valid number',\n        },\n      });\n    }\n  };\n\n  const total = (state.field1.value || 0) + (state.field2.value || 0);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/Example3.tsx\">\n          <h2>Example 3</h2>\n        </a>\n        <ul>\n          <li>Add two values together</li>\n          <li>Format the total value</li>\n        </ul>\n\n        <form className=\"needs-validation\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"validation-example-3-field1\">Value 1</label>\n              <CurrencyInput\n                id=\"validation-example-3-field1\"\n                name=\"field1\"\n                className={`form-control ${state.field1.validationClass}`}\n                value={state.field1.value}\n                onChange={handleOnChange}\n                prefix={prefix}\n              />\n              <div className=\"invalid-feedback\">{state.field1.errorMessage}</div>\n            </div>\n\n            <div className=\"col\">\n              <label htmlFor=\"validation-example-3-field2\">Value 2</label>\n              <CurrencyInput\n                id=\"validation-example-3-field2\"\n                name=\"field2\"\n                className={`form-control ${state.field2.validationClass}`}\n                value={state.field2.value}\n                onChange={handleOnChange}\n                prefix={prefix}\n              />\n              <div className=\"invalid-feedback\">{state.field1.errorMessage}</div>\n            </div>\n\n            <div className=\"col\">\n              <div className=\"\">\n                <label>Total:</label>\n                <div className=\"h3\">{formatValue({ prefix, value: total })}</div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Example3;\n","import CurrencyInput from './components/CurrencyInput';\n\nexport default CurrencyInput;\nexport { formatValue } from './components/utils/formatValue';\n","import React, { FC, useState } from 'react';\nimport { formatValue } from '../components/utils';\n\nconst FormatValuesExample: FC = () => {\n  const [value, setValue] = useState('123456789.999999');\n  const [prefix, setPrefix] = useState('$');\n  const [groupSeparator, setGroupSeparator] = useState(',');\n  const [decimalSeparator, setDecimalSeparator] = useState('.');\n  const [turnOffSeparators, setTurnOffSeparators] = useState(false);\n\n  const handleValueChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(value);\n  };\n\n  const handlePrefixChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n    setPrefix(value);\n  };\n\n  const handleGroupSeparatorChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setGroupSeparator(value);\n  };\n\n  const handleDecimalSeparatorChange = ({\n    target: { value: newDecimalSeparator },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setDecimalSeparator(newDecimalSeparator);\n  };\n\n  const handleTurnOffSeparatorChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setTurnOffSeparators(value === 'true' ? true : false);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <a href=\"https://github.com/cchanxzy/react-currency-input-field/blob/master/src/examples/FormatValuesExample.tsx\">\n          <h2>Format values example</h2>\n        </a>\n        <ul>\n          <li>Use the `formatValue` function convert a value to a user friendly string</li>\n        </ul>\n        <div className=\"col-10\">\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <label>Value</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={value}\n                onChange={handleValueChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <label>Prefix</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={prefix}\n                onChange={handlePrefixChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <label>Group Separator</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={groupSeparator}\n                onChange={handleGroupSeparatorChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <label>Decimal Separator</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={decimalSeparator}\n                onChange={handleDecimalSeparatorChange}\n              />\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col mt-3\">\n              Turn off separators:\n              <div className=\"ml-3 custom-control custom-radio custom-control-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"turnOffSeparatorsTrue\"\n                  className=\"custom-control-input\"\n                  value=\"true\"\n                  onChange={handleTurnOffSeparatorChange}\n                  checked={turnOffSeparators}\n                />\n                <label className=\"custom-control-label\" htmlFor=\"turnOffSeparatorsTrue\">\n                  True\n                </label>\n              </div>\n              <div className=\"custom-control custom-radio custom-control-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"turnOffSeparatorsFalse\"\n                  className=\"custom-control-input\"\n                  value=\"false\"\n                  onChange={handleTurnOffSeparatorChange}\n                  checked={turnOffSeparators === false}\n                />\n                <label className=\"custom-control-label\" htmlFor=\"turnOffSeparatorsFalse\">\n                  False\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-5\">\n            Formatted value:\n            <div className=\"display-2\">\n              {formatValue({\n                value,\n                groupSeparator,\n                decimalSeparator,\n                turnOffSeparators,\n                prefix,\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatValuesExample;\n"],"sourceRoot":""}